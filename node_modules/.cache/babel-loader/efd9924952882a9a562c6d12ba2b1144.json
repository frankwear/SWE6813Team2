{"ast":null,"code":"import _slicedToArray from\"/Users/kylaokobah/SWE6813Team2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{authDb,firestoreDb,storageDb,googleProvider}from'../../database/firebase.js';import React,{useEffect,useState}from'react';import{getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,GoogleAuthProvider,signInWithPopup,onAuthStateChanged,updateProfile,signOut}from\"firebase/auth\";var useUserAuthActions=function useUserAuthActions(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),authError=_useState6[0],setAuthError=_useState6[1];var handleRegister=function handleRegister(email,password,name){setIsLoading(true);createUserWithEmailAndPassword(authDb,email,password).then(function(userCredential){setAuthError('');var newUser={email:email,displayName:name};console.log(newUser);setUser(newUser);sendUser(email,name,'POST');updateProfile(authDb.currentUser,{displayName:name}).then(function(){}).catch(function(error){});}).catch(function(error){setAuthError(error.message);}).finally(function(){return setIsLoading(false);});};var handleGoogle=function handleGoogle(){setIsLoading(true);signInWithPopup(authDb,googleProvider);var docRef=firestoreDb.collection('Users').then(function(result){var user=result.user;sendUser(user.email,user.displayName,'PUT');setAuthError('');}).catch(function(error){if(error.response&&error.response.data.msg==='needs to make account'){setAuthError(\"Account doesn't exist. Make one with a community onboarding link!\");}else if(error.response&&error.response.data){setAuthError(error.response.data);}}).finally(function(){return setIsLoading(false);});};useEffect(function(){var unsubscribe=onAuthStateChanged(authDb,function(user){if(user){setUser(user);}else{setUser({});}setIsLoading(false);});return function(){return unsubscribe;};},[]);var handleLogin=function handleLogin(email,password){setIsLoading(true);signInWithEmailAndPassword(authDb,email,password).then(function(userCredential){setAuthError('');}).catch(function(error){setAuthError(error.message);}).finally(function(){return setIsLoading(false);});};var sendUser=function sendUser(email,displayName,method){var user={email:email,displayName:displayName};fetch('https://gamers-meet-293c1.web.app/users',{method:method,headers:{'content-type':'application/json'},body:JSON.stringify(user)}).then();};var logout=function logout(){signOut(authDb).then(function(){}).catch(function(error){// An error happened.\n}).finally(function(){return setIsLoading(false);});};return{user:user,isLoading:isLoading,handleRegister:handleRegister,handleGoogle:handleGoogle,handleLogin:handleLogin,authError:authError,logout:logout};};export default useUserAuthActions;","map":{"version":3,"sources":["/Users/kylaokobah/SWE6813Team2/src/Redux/actions/Auth.js"],"names":["authDb","firestoreDb","storageDb","googleProvider","React","useEffect","useState","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","updateProfile","signOut","useUserAuthActions","user","setUser","isLoading","setIsLoading","authError","setAuthError","handleRegister","email","password","name","then","userCredential","newUser","displayName","console","log","sendUser","currentUser","catch","error","message","finally","handleGoogle","docRef","collection","result","response","data","msg","unsubscribe","handleLogin","method","fetch","headers","body","JSON","stringify","logout"],"mappings":"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","sourcesContent":["import { authDb, firestoreDb, storageDb, googleProvider} from '../../database/firebase.js'\nimport React, { useEffect, useState } from 'react';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, onAuthStateChanged, updateProfile, signOut } from \"firebase/auth\";\n\nconst useUserAuthActions = () => {\n    const [user, setUser] = useState({});\n    const [isLoading, setIsLoading] = useState(true)\n    const [authError, setAuthError] = useState('')\n\n  const handleRegister = (email, password, name) => {\n        setIsLoading(true)\n        createUserWithEmailAndPassword(authDb, email, password)\n            .then((userCredential) => {\n                setAuthError('');\n                const newUser = {email, displayName: name}\n                console.log(newUser)\n                setUser(newUser)\n                sendUser(email, name, 'POST')\n                updateProfile(authDb.currentUser, {\n                    displayName: name \n                }).then(() =>{\n                }).catch((error) =>{\n                })\n            })\n            .catch((error) => {\n                setAuthError(error.message);\n            })\n            .finally(() => setIsLoading(false));\n    }\n\n  const handleGoogle = () => {\n        setIsLoading(true)\n        signInWithPopup(authDb, googleProvider)\n        var docRef= firestoreDb.collection('Users')\n            .then((result) => {\n                const user = result.user;\n                sendUser(user.email, user.displayName, 'PUT')\n                setAuthError('')\n            }) \n            .catch((error) => {\n                    if (error.response && error.response.data.msg === 'needs to make account') {\n                      setAuthError(\"Account doesn't exist. Make one with a community onboarding link!\")\n                    } else if (error.response && error.response.data) {\n                      setAuthError(error.response.data)\n                    }\n                  })\n            .finally(() => setIsLoading(false));\n    }\n\n\nuseEffect(() => {\n        const unsubscribe = onAuthStateChanged(authDb, (user) => {\n            if (user) {\n                setUser(user)\n            } else {\n                setUser({})\n            }\n            setIsLoading(false)\n        });\n        return () => unsubscribe;\n    }, [])\n\n    const handleLogin = (email, password) => {\n        setIsLoading(true)\n        signInWithEmailAndPassword(authDb, email, password)\n            .then((userCredential) => {\n                setAuthError('')\n            })\n            .catch((error) => {\n                setAuthError(error.message);\n            })\n            .finally(() => setIsLoading(false));\n    }\n\n  const sendUser = (email, displayName, method) =>{\n        const user = {email, displayName}\n        fetch('https://gamers-meet-293c1.web.app/users', {\n           method: method,\n            headers: {\n                'content-type' : 'application/json'\n            },\n            body: JSON.stringify(user)\n        })\n        .then()\n    }\nconst logout = () => {\n        signOut(authDb).then(() => {\n        }).catch((error) => {\n            // An error happened.\n        })\n            .finally(() => setIsLoading(false))\n    }\n\nreturn {\n        user,\n        isLoading,\n        handleRegister,\n        handleGoogle,\n        handleLogin,\n        authError,\n        logout,\n    }\n}\n\nexport default useUserAuthActions;"]},"metadata":{},"sourceType":"module"}